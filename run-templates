#!/usr/bin/env perl

use strict;
use warnings;
use autodie;
use 5.024;
use experimental qw( signatures );
use Template;
use File::chdir;
use Path::Tiny qw( path );

my $tt = Template->new;
my $stable        = 'bullseye';
my $stable32      = 'bullseye32';
my $stable_arm64  = 'bullseye-arm64v8';
my $latest_stable = '5.36.0';
my $latest_dev    = '5.37.6';

my %perl_sources = (
  '5.28.1'  => 'https://cpan.metacpan.org/authors/id/S/SH/SHAY/perl-5.28.1.tar.gz',
  '5.28.2'  => 'https://cpan.metacpan.org/authors/id/S/SH/SHAY/perl-5.28.2.tar.gz',
  '5.30.0'  => 'https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.30.0.tar.gz',
  '5.30.1'  => 'https://cpan.metacpan.org/authors/id/S/SH/SHAY/perl-5.30.1.tar.gz',
  '5.30.2'  => 'https://cpan.metacpan.org/authors/id/S/SH/SHAY/perl-5.30.2.tar.gz',
  '5.30.3'  => 'https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.30.3.tar.gz',
  '5.32.0'  => 'https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.32.0.tar.gz',
  '5.32.1'  => 'https://cpan.metacpan.org/authors/id/S/SH/SHAY/perl-5.32.1.tar.gz',
  '5.33.0'  => 'https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.33.0.tar.gz',
  '5.33.1'  => 'https://cpan.metacpan.org/authors/id/E/ET/ETHER/perl-5.33.1.tar.gz',
  '5.33.2'  => 'https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.33.2.tar.gz',
  '5.33.3'  => 'https://cpan.metacpan.org/authors/id/S/SH/SHAY/perl-5.33.3.tar.gz',
  '5.33.5'  => 'https://cpan.metacpan.org/authors/id/C/CO/CORION/perl-5.33.5.tar.gz',
  '5.33.6'  => 'https://cpan.metacpan.org/authors/id/H/HY/HYDAHY/perl-5.33.6.tar.gz',
  '5.33.7'  => 'https://cpan.metacpan.org/authors/id/R/RE/RENEEB/perl-5.33.7.tar.gz',
  '5.33.8'  => 'https://cpan.metacpan.org/authors/id/A/AT/ATOOMIC/perl-5.33.8.tar.gz',
  '5.33.9'  => 'https://cpan.metacpan.org/authors/id/T/TO/TODDR/perl-5.33.9.tar.gz',
  '5.34.0'  => 'https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.34.0.tar.gz',
  '5.35.0'  => 'https://cpan.metacpan.org/authors/id/R/RJ/RJBS/perl-5.35.0.tar.gz',
  '5.35.1'  => 'https://cpan.metacpan.org/authors/id/C/CO/CORION/perl-5.35.1.tar.gz',
  '5.35.5'  => 'https://cpan.metacpan.org/authors/id/L/LE/LEONT/perl-5.35.5.tar.gz',
  '5.35.6'  => 'https://cpan.metacpan.org/authors/id/H/HY/HYDAHY/perl-5.35.6.tar.gz',
  '5.35.8'  => 'https://cpan.metacpan.org/authors/id/A/AT/ATOOMIC/perl-5.35.8.tar.gz',
  '5.36.0'  => 'https://cpan.metacpan.org/authors/id/R/RJ/RJBS/perl-5.36.0.tar.gz',
  '5.37.0'  => 'https://cpan.metacpan.org/authors/id/R/RJ/RJBS/perl-5.37.0.tar.gz',
  '5.37.2'  => 'https://cpan.metacpan.org/authors/id/A/AT/ATOOMIC/perl-5.37.2.tar.gz',
  '5.37.3'  => 'https://cpan.metacpan.org/authors/id/N/NE/NEILB/perl-5.37.3.tar.gz',
  '5.37.5'  => 'https://cpan.metacpan.org/authors/id/T/TO/TODDR/perl-5.37.5.tar.gz',
  '5.37.6'  => 'https://cpan.metacpan.org/authors/id/C/CO/CORION/perl-5.37.6.tar.gz',
);

# build the Dockerfiles for the base images
{
  my $arch = 'x86_64';
  my %deb = (
    'i386/debian'    => [ qw( buster32 bullseye32 ) ],
    'arm64v8/debian' => [ qw( bullseye-arm64v8 ) ],
    'debian'         => [ qw( buster bullseye ) ],
    'ubuntu'         => [ qw( xenial bionic focal jammy ) ],
  );
  my %extra = (
  );

  foreach my $dist (sort keys %deb)
  {
    my $arch = $dist =~ /^arm64v8\// ? 'aarch64' : 'x86_64';
    foreach my $dist_release (sort $deb{$dist}->@*)
    {
      my $path = path("base/$arch")->child($dist_release);
      $path->mkpath;
      $path = $path->child('Dockerfile');
      $tt->process(
        "rc/Dockerfile-base.tt",
        { dist => $dist, dist_release => $dist_release =~ s/(32|-arm64v8)$//r, %{ $extra{$dist_release} // {} } },
        "$path"
      ) || die $tt->error
    }
  }

  my %fedora = (
    fedora => [ 36 ],
    centos => [ 7 ],
  );

  foreach my $dist (sort keys %fedora)
  {
    foreach my $dist_version (sort $fedora{$dist}->@*)
    {
      my $dist_release = "$dist$dist_version";
      my $path = path("base/$arch")->child($dist_release);
      $path->mkpath;
      $path = $path->child('Dockerfile');
      $tt->process(
        "rc/Dockerfile-base-fedora.tt",
        { dist => $dist, dist_version => $dist_version, %{ $extra{$dist_release} // {} } },
        "$path"
      ) || die $tt->error
    }
  }

  my %alpine = (
    alpine => [ '3.16' ],
  );
  foreach my $dist (sort keys %alpine)
  {
    foreach my $dist_version (sort $alpine{$dist}->@*)
    {
      my $dist_release = "$dist$dist_version";
      my $path = path("base/$arch")->child($dist_release);
      $path->mkpath;
      $path = $path->child('Dockerfile');
      $tt->process(
        "rc/Dockerfile-base-alpine.tt",
        { dist => $dist, dist_version => $dist_version, %{ $extra{$dist_release} // {} } },
        "$path"
      ) || die $tt->error
    }
  }
}

sub generate_dockerfile ($tag, $aliases, %vars)
{
  my $arch = $vars{dist_release} =~ /-arm64v8/ ? 'aarch64' : 'x86_64';
  my $path = path("versions/$arch")->child($tag);
  $path->mkpath;
  foreach my $alias ($aliases->@*)
  {
    my $alias_path = path("versions/$arch")->child($alias);
    if(-e $alias_path)
    {
      if(! -l $alias_path)
      {
        use Carp qw( croak );
        croak "alias path $alias_path is not a symlink!";
      }
      unlink $alias_path;
    }
    symlink $path->basename, "$alias_path";
  }

  my $fh;
  open $fh, "|cat -s > @{[ $path->child('Dockerfile') ]}";
  
  $tt->process(
    "rc/Dockerfile.tt",
    \%vars,
    $fh,
  ) || die $tt->error;

  close $fh;
}

foreach my $perl_version ($latest_stable, qw( 5.34.1 5.32.1 5.30.3 5.28.2 5.26.3 5.24.4 ))
{
  foreach my $dist_release ($stable, $stable_arm64)
  {
    my @aliases;
    if($dist_release eq $stable)
    {
      push @aliases, $perl_version;
      push @aliases, $perl_version =~ s/\.[0-9]+$//r;
    }
    else
    {
      if($dist_release =~ /arm64/)
      {
        push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-arm64v8";
        push @aliases, $perl_version . "-arm64v8";
        push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-arm64";
        push @aliases, $perl_version . "-arm64";
      }
    }
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$dist_release";
    generate_dockerfile("$perl_version-$dist_release", \@aliases,
      dist_release => $dist_release,
      perl_version => $perl_version,
    );
  }
}

foreach my $perl_version ($latest_dev)
{
  foreach my $dist_release ($stable, $stable_arm64)
  {
    my @aliases;
    if($dist_release eq $stable)
    {
      push @aliases, $perl_version;
      push @aliases, $perl_version =~ s/\.[0-9]+$//r;
    }
    else
    {
      push @aliases, $perl_version =~ s/\.[0-9]+$//r . "-$dist_release";
      if($dist_release =~ /arm64/)
      {
        push @aliases, $perl_version =~ s/\.[0-9]+$//r . "-arm64";
        push @aliases, $perl_version . "-arm64";
      }
    }
    my $rc = 0;
    if($perl_version =~ /-RC[0-9]/)
    {
      $rc = 1;
      push @aliases, $perl_version =~ s/\.[0-9]+-RC[0-9]+$//r if $stable eq $dist_release;
      push @aliases, $perl_version =~ s/-RC[0-9]+$//r . "-$dist_release";
      push @aliases, $perl_version =~ s/\.[0-9]+-RC[0-9]+$//r . "-$dist_release";
    }
    generate_dockerfile("$perl_version-$dist_release", \@aliases,
      dist_release => $dist_release,
      perl_dev     => 1,
      perl_suffix  => $perl_version =~ s/(-RC[0-9]+|)$//r,
      perl_flags   => '-Dusedevel',
      perl_version => $perl_version,
    );
  }
}

foreach my $perl_version (qw( 5.22.4 5.20.3 5.18.4 5.16.3 5.14.4 5.12.5 5.10.1 5.10.0 5.8.9 5.8.8 5.8.7 5.8.6 5.8.5 5.8.4 ))
{
  foreach my $dist_release ($stable, $stable_arm64)
  {
    my @aliases;
    if($dist_release eq $stable)
    {
      push @aliases, $perl_version;
      if($perl_version !~ /^5.8/ || $perl_version eq '5.8.8')
      {
        push @aliases, $perl_version =~ s/\.[0-9]+$//r;
        push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$dist_release";
      }
    }
    else
    {
      push @aliases, $perl_version =~ s/\.[0-9]+$//r . "-$dist_release";
      if($dist_release =~ /arm64/)
      {
        push @aliases, $perl_version =~ s/\.[0-9]+$//r . "-arm64";
        push @aliases, $perl_version . "-arm64";
      }      
    }
    generate_dockerfile("$perl_version-$dist_release", \@aliases,
      old          => '5.30.3',
      dist_release => $dist_release,
      perl_version => $perl_version,
    );
  }
}

foreach my $flag (qw( threads longdouble quadmath ))
{
  foreach my $dist_release ($stable, $stable_arm64)
  {
    next if $dist_release =~ /arm64/ && $flag eq 'quadmath';
    foreach my $perl_version ('5.8.4', '5.8.8', '5.10.0', '5.10.1', '5.14.4', $latest_stable)
    {
      next if $flag ne 'threads' && $perl_version =~ /^(5\.8|5\.10)\./;
      next if $flag eq 'quadmath' && $perl_version eq '5.14.4';
      my $old;
      $old = '5.30.3';
      my $tag = "$perl_version-$dist_release-$flag";
      my @aliases;
      if($dist_release eq $stable)
      {
        push @aliases, "$perl_version-$flag";
        push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$flag";
      }
      else
      {
        if($dist_release =~ /arm64/)
        {
          push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-arm64v8-$flag";
          push @aliases, $perl_version . "-arm64v8-$flag";
          push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-arm64-$flag";
          push @aliases, $perl_version . "-arm64-$flag";
        }
      }
      push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$dist_release-$flag";
      generate_dockerfile($tag, \@aliases,
        old          => $old,
        perl_flags   => "-Duse$flag",
        dist_release => $dist_release,
        perl_version => $perl_version,
      );
    }
  }
}

foreach my $perl_version ($latest_stable)
{

  foreach my $dist_release (qw( jammy focal bionic buster bullseye buster32 bullseye32 xenial centos7 fedora36 ))
  {
    my $tag = "$perl_version-$dist_release";
    my @aliases;
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$dist_release";
    my $no_perl = 0;
    $no_perl = 1 if $dist_release =~ /^(fedora|centos)/;
    generate_dockerfile($tag, \@aliases,
      no_perl      => $no_perl,
      dist_release => $dist_release,
      perl_version => $perl_version,
      perl_source  => $perl_sources{$perl_version},
    );
  }

  foreach my $dist_release (qw( alpine3.16 ))
  {
    my $tag = "$perl_version-$dist_release-threads";
    my @aliases;
    push @aliases, "$perl_version-$dist_release";
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$dist_release-threads";
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$dist_release";
    my $no_perl = 0;
    $no_perl = 1 if $dist_release =~ /^(alpine)/;
    generate_dockerfile($tag, \@aliases,
      no_perl      => $no_perl,
      dist_release => $dist_release,
      perl_version => $perl_version,
      perl_source  => $perl_sources{$perl_version},
      perl_flags   => "-Dusethreads",
    );
  }

  # libffi master
  {
    my $stable = 'jammy';  # debian 11 autoconf is too old for libffi
    my $tag = "$perl_version-$stable-ffimaster";
    my @aliases;
    push @aliases, "$perl_version-ffimaster";
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$stable-ffimaster";
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-ffimaster";
    generate_dockerfile($tag, \@aliases,
      dist_release => $stable,
      perl_version => $perl_version,
      ffimaster    => 1,
    );
  }

  # memory debug
  {
    my $stable = 'jammy';  # debian 11 autoconf is too old for libffi
    my $tag = "$perl_version-$stable-debug";
    my @aliases;
    push @aliases, "$perl_version-debug";
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$stable-debug";
    push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-debug";
    generate_dockerfile($tag, \@aliases,
      dist_release => $stable,
      perl_version => $perl_version,
      perl_flags   => '-DDEBUGGING -Doptimize=-g3 -Accflags="-DDEBUG_LEAKING_SCALARS"',
      packages => {
        debian => 'valgrind',
      },
      ffimaster    => 1,
    );
  }

  # autoconf on libffi is too old on Debian 11 and Ubuntu doesn't have a 32 bit
  # version, so we will wait until Debian 12 comes out?
  ## memory debug32
  #{
  #  my $tag = "$perl_version-$stable32-debug32";
  #  my @aliases;
  #  push @aliases, "$perl_version-debug32";
  #  push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-$stable32-debug32";
  #  push @aliases, ($perl_version =~ s/\.[0-9]+$//r) . "-debug32";
  #  generate_dockerfile($tag, \@aliases,
  #    dist_release => $stable32,
  #    perl_version => $perl_version,
  #    perl_flags   => '-DDEBUGGING -Doptimize=-g3 -Accflags="-DDEBUG_LEAKING_SCALARS"',
  #    packages => {
  #      debian => 'valgrind',
  #    },
  #    ffimaster    => 1,
  #  );
  #}
}

# default
{
  unlink 'versions/x86_64/default' if -l 'versions/x86_64/default';
  symlink "$latest_stable", 'versions/x86_64/default';
}

# static
{
  mkdir 'versions/x86_64/static' unless -d 'versions/x86_64/static';
  path('versions/x86_64/static/Dockerfile')->spew(
    path('rc/Dockerfile.static')->slurp
  );
}
